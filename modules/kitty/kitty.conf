# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
# see https://sw.kovidgoyal.net/kitty/conf/

##         :::    ::::::::::::::::   ::: ::::::::
##        :+:   :+: :+:       :+:   :+::+:    :+:
##       +:+  +:+  +:+        +:+ +:+ +:+
##      +#++:++   +#++:++#    +#++:  +#++:++#++
##     +#+  +#+  +#+          +#+          +#+
##    #+#   #+# #+#          #+#   #+#    #+#
##   ###    #############   ###    ########
##  ###
#############################################################
## Keyboard shortcuts #####################################
##
# https://sw.kovidgoyal.net/kitty/conf/#keyboard-shortcuts
# https://sw.kovidgoyal.net/kitty/actions/

# remove defaults
clear_all_shortcuts yes

#: For a list of key names, see:
#: <https://github.com/kovidgoyal/kitty/blob/master/glfw/glfw3.h#L349>.
#: The name to use is the part after the GLFW_KEY_ prefix. For a list
#: of modifier names, see: GLFW mods
#: <https://www.glfw.org/docs/latest/group__mods.html>

#: Finally, you can use raw system key codes to map keys, again only
#: for keys that are not known as GLFW keys. To see the system key
#: code for a key, start kitty with the kitty --debug-keyboard option.
#: Then kitty will output some debug text for every key event. In that
#: text look for ``native_code`` the value of that becomes the key
#: name in the shortcut. For example:
#: .. code-block:: none
#:     on_key_input: glfw key: 65 native_code: 0x61 action: PRESS mods: 0x0 text: 'a'
#: Here, the key name for the A key is 0x61 and you can use it with::
#:     map ctrl+0x61 something
#: to map ctrl+a to something.

# unmap default keyboard shortcut:
#:     map kitty_mod+space no_op

# trigger multiple actions from single shortcut:
#:     map kitty_mod+e combine : new_window : next_layout

# Key chords:
#:     map ctrl+f>2 set_font_size 20

# action_alias:
#:    action_alias launch_tab launch --cwd=current --type=tab
#:    map f1 launch_tab vim

kitty_mod   cmd+shift

# kitten_alias hints hints --hints-offset=0
#: You can create aliases for kitten names, this allows overriding the
#: defaults for kitten options and can also be used to shorten
#: repeated mappings of the same kitten with a specific group of
#: options. For example, the above alias changes the default value of
#: kitty +kitten hints --hints-offset to zero for all mappings,
#: including the builtin ones.

#: Scrolling
map cmd+up              scroll_line_up
map cmd+down            scroll_line_down
map cmd+shift+up        scroll_page_up
map cmd+shift+down      scroll_page_down
map kitty_mod+h         show_scrollback

## Navigation
# jump to beginning and end of word
map alt+left      send_text all \x1b\x62
map alt+right     send_text all \x1b\x66

# jump to beginning and end of line
map cmd+left      send_text all \x01
map cmd+right     send_text all \x05

#: Clipboard
map cmd+c         copy_to_clipboard
map cmd+v         paste_from_clipboard

#: Window management
map kitty_mod+n   new_os_window_with_cwd
map cmd+\         launch --cwd=current --location=vsplit
map cmd+shift+\   launch --cwd=current --location=hsplit

map cmd+w         close_window
map ctrl+shift+]  next_window
map ctrl+shift+[  previous_window

map cmd+ctrl+f    toggle_fullscreen
# ideally we'd support Fn+F, but for now, the legacy macos shortcut...
# map kitty_mod+escape kitty_shell window

#: Tab management
map shift+cmd+]     next_tab
map shift+cmd+[     previous_tab
map cmd+t           new_tab_with_cwd
map cmd+shift+t     remote_control detach-window --target-tab=new
# tear off split window to new tab

#: Font sizes
map cmd+equal           change_font_size all +2.0
map cmd+minus           change_font_size all -2.0
map cmd+0               change_font_size all 0

#: Miscellaneous

# default mac preferences shortcuts
map cmd+,       edit_config_file
map cmd+ctrl+,  combine : load_config_file : send_text normal \x07
#                                   flash a bell to confirm reloaded

# input emoji/unicode (like mac ui version)
map ctrl+cmd+space    input_unicode_character

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

# peek at whats behind the terminal window
map cmd+p     kitten toggle_opacity.py .4

# clear, saving current screen in scrollback
map ctrl+l    clear_terminal scroll active


map ctrl+m toggle_marker

###########################################
##### etc #################################
###########################################
# background_opacity .1
# background_opacity .95

font_family	Berkeley Mono Nerd Font
font_size 16.0
#: Font size (in pts)
# for Berkeley Mono which is much more compact
# (sourcecodepro i use size 15)


cursor #F81CE5
#: Default cursor color

cursor_shape underline
#: The cursor shape can be one of (block, beam, underline)

scrollback_lines 2000
scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER
scrollback_pager_history_size 100
# in MiB

# url_color #0087bd
# url_style curly
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly

open_url_modifiers cmd

# url_prefixes http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.


enable_audio_bell no
visual_bell_duration 0.1

## terminal window manager
##
enabled_layouts splits
# https://sw.kovidgoyal.net/kitty/overview/#layouts
draw_minimal_borders no
# show border on all 4 sides in split mode
window_margin_width 1
window_padding_width 1
# needed for slack screensharing border :(
active_border_color #ffffff
inactive_border_color #666666
# inactive_text_alpha .5
bell_border_color #ff5a00
#: border when inactive window has bell

## misc OS behavior
##
hide_window_decorations yes
confirm_os_window_close 2

## Tab bar
##
tab_bar_edge top
tab_bar_style powerline
tab_bar_min_tabs 0
# always show tab bar

# active_tab_foreground   #000
# active_tab_background   #eee
# active_tab_font_style   bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal
# tab_bar_background none


## Color scheme
##
# from night-owl
# https://github.com/pbomb/hyper-night-owl/blob/master/index.js

foreground #d6deeb
background #011627

dynamic_background_opacity yes
#: Allow changing of the background_opacity dynamically, using either
#: keyboard shortcuts (increase_background_opacity and
#: decrease_background_opacity) or the remote control facility.

# dim_opacity 0.75
#: How much to dim text that has the DIM/FAINT attribute set. One
#: means no dimming and zero means fully dimmed (i.e. invisible).

# selection_foreground #000000
#: The foreground for text selected with the mouse. A value of none
#: means to leave the color unchanged.

# selection_background #fffacd
#: The background for text selected with the mouse.


#: black
color0 #011627
color8 #575656

#: red
color1 #EF5350
color9 #ef5350

#: green
color2  #22da6e
color10 #22da6e

#: yellow
color3  #addb67
color11 #ffeb95

#: blue
color4  #82aaff
color12 #82aaff

#: magenta
color5  #c792ea
color13 #c792ea

#: cyan
color6  #21c7a8
color14 #7fdbca

#: white
color7  #ffffff
color15 #ffffff

# mark1_foreground black
# mark1_background #98d3cb
#: Color for marks of type (light steel blue)

# mark2_foreground black
# mark2_background #f2dcd3
#: Color for marks of type (beige)

# mark3_foreground black
# mark3_background #f274bc
#: Color for marks of type (violet)

## Advanced
##

# shell . --login
# editor .

allow_remote_control yes
# this creates an allowlist of actions:
remote_control_password "" launch
# see https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.remote_control_password

# env
#: Specify environment variables to set in all child processes. Note
#: that environment variables are expanded recursively, so if you
#: use::
#:     env MYVAR1=a
#:     env MYVAR2=${MYVAR1}/${HOME}/b
#: The value of MYVAR2 will be a/<path to home directory>/b.

update_check_interval 0
# we manage this with brew

# clipboard_control write-clipboard write-primary
#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: set of possible actions is: write-clipboard read-clipboard write-
#: primary read-primary. You can additionally specify no-append to
#: disable kitty's protocol extension for clipboard concatenation. The
#: default is to allow writing to the clipboard and primary selection
#: with concatenation enabled. Note that enabling the read
#: functionality is a security risk as it means that any program, even
#: one running on a remote server via SSH can read your clipboard.

macos_option_as_alt left
macos_quit_when_last_window_closed yes
macos_traditional_fullscreen yes




#: Select and act on visible text
#: Use the hints kitten to select text and either pass it to an
#: external program or insert it into the terminal or copy it to the
#: clipboard.

# map kitty_mod+. kitten hints

#: Open a currently visible URL using the keyboard. The program used
#: to open the URL is specified in open_url_with.

# map kitty_mod+p>f kitten hints --type path --program -

#: Select a path/filename and insert it into the terminal. Useful, for
#: instance to run git commands on a filename output from a previous
#: git command.

# map kitty_mod+p>shift+f kitten hints --type path

#: Select a path/filename and open it with the default open program.

# map kitty_mod+p>l kitten hints --type line --program -

#: Select a line of text and insert it into the terminal. Use for the
#: output of things like: ls -1

# map kitty_mod+p>w kitten hints --type word --program -

#: Select words and insert into terminal.

# map kitty_mod+p>h kitten hints --type hash --program -

#: Select something that looks like a hash and insert it into the
#: terminal. Useful with git, which uses sha1 hashes to identify
#: commits

# map kitty_mod+p>n kitten hints --type linenum

#: Select something that looks like filename:linenum and open it in
#: vim at the specified line number.

# map kitty_mod+p>y kitten hints --type hyperlink

#: Select a hyperlink (i.e. a URL that has been marked as such by the
#: terminal program, for example, by ls --hyperlink=auto).


#: The hints kitten has many more modes of operation that you can map
#: to different shortcuts. For a full description see kittens/hints.
#: }}}
